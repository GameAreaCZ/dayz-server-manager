name: Build

on:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '16.x'
    
    - name: download mikeros tools
      uses: arma-actions/mikero-tools@latest

    - name: Install deps
      run: npm ci
    - name: Install ui deps
      run: npm run install:ui
    
    - name: Set version
      if: startsWith(github.ref, 'refs/tags/v')
      run: npm version ${{ github.ref_name }}

    - name: Build
      run: npm run build

    - name: Pack (windows)
      run: npm run pack:windows
    
    - name: Zip Artifacts (windows)
      run: powershell Compress-Archive -Path 'build/*' -DestinationPath 'server-manager.zip'
    
    - name: Archive build artifacts (windows)
      uses: actions/upload-artifact@v4
      with:
        name: server-manager-windows
        path: ./server-manager.zip

  release:
    runs-on: ubuntu-latest

    if: startsWith(github.ref, 'refs/tags/v')

    needs:
    - build-windows

    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Download artifacts (windows)
      uses: actions/download-artifact@v4
      with:
        name: server-manager-windows

    - name: Rename
      run: |
        mv server-manager.zip server-manager-windows.zip

    - name: Upload Release Asset (Windows)
      id: upload-release-asset-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./server-manager-windows.zip
        asset_name: server-manager-windows.zip
        asset_content_type: application/zip
    
    - name: Download artifacts (windows debug)
      uses: actions/download-artifact@v4
      with:
        name: server-manager-windows-debug

    - name: Rename
      run: |
        mv server-manager.zip server-manager-windows-debug.zip

    - name: Upload Release Asset (Windows Debug)
      id: upload-release-asset-windows-debug
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./server-manager-windows-debug.zip
        asset_name: server-manager-windows-debug.zip
        asset_content_type: application/zip

    - name: Download artifacts (ubuntu 18)
      uses: actions/download-artifact@v4
      with:
        name: server-manager-ubuntu-18

    - name: Rename
      run: |
        mv server-manager.zip server-manager-ubuntu-18.zip

    - name: Upload Release Asset (Ubuntu 18)
      id: upload-release-asset-ubuntu-18
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./server-manager-ubuntu-18.zip
        asset_name: server-manager-ubuntu-18.zip
        asset_content_type: application/zip 

    - name: Download artifacts (ubuntu latest)
      uses: actions/download-artifact@v4
      with:
        name: server-manager-ubuntu-latest

    - name: Rename
      run: |
        mv server-manager.zip server-manager-ubuntu-latest.zip

    - name: Upload Release Asset (Ubuntu latest)
      id: upload-release-asset-ubuntu-latest
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./server-manager-ubuntu-latest.zip
        asset_name: server-manager-ubuntu-latest.zip
        asset_content_type: application/zip
